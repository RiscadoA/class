 
type C {
 offer of {
  | #give: recv ~lint; close
  | #get : send  lint; close
 }
};;

proc q(n:C,k:~lint) {
case n of {
  |#give: recv n(x); println (x+":"+k); close n
  |#get:  send n(k); close n
}
};;

proc cli(x:~C, y:~C)
{
 #get x; recv x(v); #give y; send y(v); wait x; wait y; ()
};;


proc main() {
cut {
    cell c(0)
	|c:~state lint|
	q(x,0)
	| x:~C|
	q(y,100)
	| y:~C|
	share c {
		take c(n); 
		put c(n+1);
		release c
	||
		take c(z); 
		put c(0);
		par { release c ||
		if (z==0) { cli(x,y) } 
			{  cli(y,x)  }
		}
	}
    }
};;

