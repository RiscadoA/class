/*
    Includes all process definitions and runs all the examples.
*/

include "arithmetic-server.clls";;
system_bss();;



/*
    Defines the booleans using pure session-based processes as well as some functions and tests.
*/
include "booleans.clls";;
notTrue();;
notFalse();;
andTrueTrue();;
andFalseTrue();;
andTrueFalse();;
andFalseFalse();;

/*
    Defines a boolean server and two clients.
*/
include "boolean-server.clls";;
system_bool();;

/*
    Implements the so-called exponential isomorphisms.
*/
include "exponential-isomorphisms.clls";;

/*
    Defines the list datatype and some operations using inductive/coinductive session types.
*/
include "lists.clls";;

/*
    Defines the list datatype and some operations using system F style encodings.
*/
include "lists-systemF.clls";;

/*
Defines a non-terminating process using the unsafe recursion mode.
*/
include "loop.clls";;

/*
    Defines the maybe datatype.
*/
include "maybe.clls";;


/*
    Implements the naturals using primitive recursion, defines some tests.
*/
include "naturals.clls";;
test0();;
test1();;
test2();;
test3();;
test4();;

/*
    Implements the naturals using polymorphic sessions,
    in the style of System F encodings.
*/
include "naturals-systemF.clls";;

// tests missing here !!

/*
Illustrates how to encode in recursive types
usign polymorphic sessions.
*/

include "recursion-for-free.clls";;
testrNAT();;

/*
    Defines the recursive tree datatype and some tests.
*/
include "tree.clls";;
test_tree();;
test_tree2();;

/*
    Defines a process that witnesses the symmetry of the tensor connective (x).
*/
include "symmetry-tensor.clls";;

/*
    Implements a infinite precision bit counter.
*/
include "bit-counter.clls";;
test_n(;200);;

/*
    Implements an iteration loop using primitive recursion.
*/
include "repeat.clls";; 
test_rpt();;


/*
    Implements the Ackermann function.
*/

include "ackermann.clls";;

test_ackerman();;



