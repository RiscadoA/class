include "naturals.clls";;

/*repeats n times the body b:~(A -o A),
starting with i:~A and finishing with o:A */
proc rec repeat_<A>(n:~Nat, i:~A, o:A; b:send A;~A){
    case n of {
        |#Z: wait n;
             fwd i o
        |#S: call b(x);
            send x(di:A. fwd di i);
            repeat_<A>(n, x, o; b)
    }
};;

//we use repeat_ and double to implement the power of two function
proc exp2(n:~Nat, m:Nat){
    cut{
        one(i)
        |i:~Nat|
        ?b;
        repeat_<Nat>(n, i, m;b)
        |b:!recv ~Nat;Nat|
        !b(k:recv ~Nat; Nat);
        recv k(j:~Nat);
        double(j,k)
      }
};;

//a test to compute 2^3
proc test_rpt(){
    cut{
        three(n)
        |n:~Nat|
        exp2(n,m)
        |m:~Nat|
        embedd(m,k)
        |k:colint|
        println("2^3 = " + k);
        ()
    }
};;

